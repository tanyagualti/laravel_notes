Laravel automatically generates a CSRF "token" for each active user session managed by the application.
This token is used to verify that the authenticated user is the person actually making the requests to the application. 
Since this token is stored in the user's session and changes each time the session is regenerated,
a malicious application is unable to access it.  CSRF(Cross-site Request Forgery)
 yeh hr user session pr token number change hota hai yeh isilia change hoti rhti hai authenticate krta rhta hai user ko. ki koi
hacker attack plan nh krede.website pr koi malicious attack na plan krde


CSRF stands for Cross-Site Request Forgery. It's a type of attack where a malicious website tricks a user's browser
into making an unwanted request to a different site where the user is authenticated.
This attack can lead to actions being performed without the user's knowledge or consent.
To prevent CSRF attacks, web developers typically use techniques like CSRF tokens,
which are unique tokens embedded in web forms to ensure that a request is coming from an authorized source.


//welcome.blade.php
@include('header')


<form action="" method="POST">
    @csrf //when we are not use csrf token it gives error session expired 419 with post method get k sath without CSRF error nhi ati
    <label for="name">Name</label>
    <input id="name" name="name" type="text"><br>
    <label for="email">Email</label>
    <input type="email" name="email" id="email"><br>
    <input type="submit" value="submit">
</form>


@include('footer')





web.php
Route::get('/login', function () {
    return view('welcome');
});
Route::post('/login',[UserController::class,'index']);


explaination

Route::post: This is a method provided by Laravel's routing system to define a route that responds only to POST requests.
In web development, HTTP POST requests are commonly used for submitting data to a server, such as form submissions.

/login:routing name

[UserController::class, 'index']: This part specifies the controller and method that should handle the request. 
Laravel follows the MVC (Model-View-Controller) architectural pattern, where controllers handle incoming requests,
process them, and return responses.
In this case, when a POST request is made to /login, Laravel will invoke the index method of the UserController class.

UserController::class: This refers to the UserController class. The ::class syntax is used in PHP to get the fully qualified class name.
'index': This is the method within the UserController class that will be invoked to handle the request. In Laravel,
controller methods typically correspond to specific actions or endpoints in the application.

//UserController.php
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;


class UserController extends Controller
{
    public function index(Request $req){
        return $req->input(); //it is request method input() which is used to get input values from request object
    }
}
